{"version":3,"sources":["../src/main.ts","../src/run.ts"],"sourcesContent":["import \"source-map-support/register.js\";\n\nimport * as core from \"@actions/core\";\nimport { run } from \"./run.js\";\n\nconst main = async (): Promise<void> => {\n  await run({\n    setupGitUser: core.getBooleanInput(\"setupGitUser\"),\n  });\n};\n\nmain().catch((e: Error) => {\n  core.setFailed(e);\n  console.error(e);\n});\n","import { readFile } from \"node:fs/promises\";\nimport * as core from \"@actions/core\";\nimport { exec, getExecOutput } from \"@actions/exec\";\n\ntype Inputs = {\n  setupGitUser: boolean;\n};\n\nexport const run = async (inputs: Inputs) => {\n  // fix .gitignore\n  await exec(\"sed\", [\"-i\", \"-E\", \"s|^/?dist/?||g\", \".gitignore\"]);\n  // remove unnecessary files\n  await exec(\"rm\", [\"-rf\", \".github/workflows\"]);\n\n  const { version } = JSON.parse(await readFile(\"./package.json\", \"utf8\"));\n\n  // check v{version} tag exists\n  // fetch specific tag\n  await exec(\"git\", [\"fetch\", \"--tags\"]);\n  const { stdout: tagExists } = await getExecOutput(\"git\", [\n    \"tag\",\n    \"-l\",\n    `v${version}`,\n  ]);\n\n  if (tagExists.trim()) {\n    core.info(`v${version} tag already exists`);\n    core.info(\"Skipping release\");\n    return;\n  }\n\n  if (inputs.setupGitUser) {\n    core.info(\"setting git user\");\n    await exec(\"git\", [\"config\", \"user.name\", \"github-actions[bot]\"]);\n    await exec(\"git\", [\n      \"config\",\n      \"user.email\",\n      \"github-actions[bot]@users.noreply.github.com\",\n    ]);\n  }\n\n  // commit changes\n  await exec(\"git\", [\"add\", \".\"]);\n  await exec(\"git\", [\"commit\", \"-m\", `Release v${version}`]);\n  await exec(\"git\", [\"tag\", `v${version}`]);\n  // this log is for changeset to notice the new tag\n  // see: https://github.com/changesets/action/blob/50750fa876cc1e54c7cb972db5e2f7271fc53d99/src/run.ts#L176\n  console.log(`New tag: v${version}`);\n};\n"],"mappings":";AAAA,OAAO;AAEP,YAAYA,WAAU;;;ACFtB,SAAS,gBAAgB;AACzB,YAAY,UAAU;AACtB,SAAS,MAAM,qBAAqB;AAM7B,IAAM,MAAM,OAAO,WAAmB;AAE3C,QAAM,KAAK,OAAO,CAAC,MAAM,MAAM,kBAAkB,YAAY,CAAC;AAE9D,QAAM,KAAK,MAAM,CAAC,OAAO,mBAAmB,CAAC;AAE7C,QAAM,EAAE,QAAQ,IAAI,KAAK,MAAM,MAAM,SAAS,kBAAkB,MAAM,CAAC;AAIvE,QAAM,KAAK,OAAO,CAAC,SAAS,QAAQ,CAAC;AACrC,QAAM,EAAE,QAAQ,UAAU,IAAI,MAAM,cAAc,OAAO;AAAA,IACvD;AAAA,IACA;AAAA,IACA,IAAI,OAAO;AAAA,EACb,CAAC;AAED,MAAI,UAAU,KAAK,GAAG;AACpB,IAAK,UAAK,IAAI,OAAO,qBAAqB;AAC1C,IAAK,UAAK,kBAAkB;AAC5B;AAAA,EACF;AAEA,MAAI,OAAO,cAAc;AACvB,IAAK,UAAK,kBAAkB;AAC5B,UAAM,KAAK,OAAO,CAAC,UAAU,aAAa,qBAAqB,CAAC;AAChE,UAAM,KAAK,OAAO;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAGA,QAAM,KAAK,OAAO,CAAC,OAAO,GAAG,CAAC;AAC9B,QAAM,KAAK,OAAO,CAAC,UAAU,MAAM,YAAY,OAAO,EAAE,CAAC;AACzD,QAAM,KAAK,OAAO,CAAC,OAAO,IAAI,OAAO,EAAE,CAAC;AAGxC,UAAQ,IAAI,aAAa,OAAO,EAAE;AACpC;;;AD3CA,IAAM,OAAO,YAA2B;AACtC,QAAM,IAAI;AAAA,IACR,cAAmB,sBAAgB,cAAc;AAAA,EACnD,CAAC;AACH;AAEA,KAAK,EAAE,MAAM,CAAC,MAAa;AACzB,EAAK,gBAAU,CAAC;AAChB,UAAQ,MAAM,CAAC;AACjB,CAAC;","names":["core"]}